{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","containers/main-page/main-page.js","gateways/data/data-api.js","containers/main-page/main-page.scss"],"names":["App","configureRouter","cfg","router","title","map","route","name","moduleId","debug","testing","gatewayRootURL","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","MainPage","api","activate","initDataModel","attached","audioPlayer","window","Audio","pronunciationLoadMap","pronunciationCache","isLoadingWords","wordsLoadedPct","isLoadingAudio","audioLoadedPct","queryChanged","queryResult","query","loaded","getWordsRequest","withDownloadProgressCallback","total","parseInt","send","response","content","words","setTimeout","catch","err","playPronunciation","wordId","playAudioBlob","loadMap","isAudioLoading","getPronunciationRequest","withResponseType","console","log","audioBlob","src","URL","createObjectURL","play","DataAPI","client","withBaseUrl","prefix","createRequest","asGet"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\r\n  constructor() {}\r\n\r\n  configureRouter(cfg, router) {\r\n    this.router = router;\r\n    cfg.title = 'Word.ly';\r\n\r\n    cfg.map([\r\n      {\r\n        route: '',\r\n        name: 'main',\r\n        moduleId: 'containers/main-page/main-page'\r\n      }\r\n    ]);\r\n  }\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true,\r\n  gatewayRootURL: 'http://localhost:8080'\r\n};\r\n","import environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\nPromise.config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { bindable } from 'aurelia-framework';\r\n\r\nimport { DataAPI } from '../../gateways/data/data-api';\r\n\r\n@inject(DataAPI)\r\nexport class MainPage {\r\n  @bindable query = '';\r\n\r\n  constructor(api) {\r\n    this.api = api;\r\n  }\r\n\r\n  activate() {\r\n    this.initDataModel();\r\n  }\r\n\r\n  attached() {\r\n    this.audioPlayer = new window.Audio();\r\n  }\r\n\r\n  initDataModel() {\r\n    this.pronunciationLoadMap = {};\r\n    this.pronunciationCache = {};\r\n    this.isLoadingWords = false;\r\n    this.wordsLoadedPct = 0;\r\n    this.isLoadingAudio = false;\r\n    this.audioLoadedPct = 0;\r\n  }\r\n\r\n  queryChanged() {\r\n    this.queryResult = [];\r\n    if (this.query) {\r\n      this.isLoadingWords = true;\r\n      this.loaded = 0;\r\n      this.api.getWordsRequest(this.query)\r\n        .withDownloadProgressCallback(({ loaded, total }) => this.wordsLoadedPct = parseInt(loaded * 100.0 / total))\r\n        .send()\r\n        .then((response) => (response.content))\r\n        .then((words) => {\r\n          this.queryResult = words;\r\n          this.wordsLoadedPct = 100;\r\n          setTimeout(() => {\r\n            this.isLoadingWords = false;\r\n          }, 150);\r\n        })\r\n        .catch((err) => {\r\n          this.wordsLoadedPct = 100;\r\n          setTimeout(() => {\r\n            this.isLoadingWords = false;\r\n          }, 150);\r\n        });\r\n    }\r\n  }\r\n\r\n  playPronunciation(wordId) {\r\n    if (this.pronunciationCache[wordId]) {\r\n      this.playAudioBlob(this.pronunciationCache[wordId]);\r\n      return;\r\n    }\r\n\r\n    const loadMap = this.pronunciationLoadMap[wordId] = {\r\n      isAudioLoading: true,\r\n      audioLoadedPct: 0\r\n    };\r\n\r\n    this.api.getPronunciationRequest(wordId)\r\n      .withResponseType('blob')\r\n      .withDownloadProgressCallback(({ loaded, total }) => {loadMap.audioLoadedPct = parseInt(loaded * 100.0 / total); console.log(loadMap.audioLoadedPct);})\r\n      .send()\r\n      .then((response) => (response.content))\r\n      .then((audioBlob) => {\r\n        this.pronunciationCache[wordId] = audioBlob;\r\n        loadMap.audioLoadedPct = 100;\r\n        setTimeout(() => {\r\n          loadMap.isAudioLoading = false;\r\n          this.playAudioBlob(audioBlob);\r\n        }, 150);\r\n      })\r\n      .catch((err) => {\r\n        loadMap.audioLoadedPct = 100;\r\n        setTimeout(() => loadMap.isAudioLoading = false, 150);\r\n      });\r\n  }\r\n\r\n  playAudioBlob(audioBlob) {\r\n    this.audioPlayer.src = window.URL.createObjectURL(audioBlob);\r\n    this.audioPlayer.play();\r\n  }\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { HttpClient } from 'aurelia-http-client';\r\nimport environment from '../../environment';\r\n\r\n@inject(HttpClient)\r\nexport class DataAPI {\r\n  constructor(client) {\r\n    this.client = client.configure(cfg => cfg\r\n      .withBaseUrl(environment.gatewayRootURL)\r\n    );\r\n  }\r\n\r\n  getWordsRequest(prefix) {\r\n    return this.client\r\n      .createRequest(`/words?query=${prefix}`)\r\n      .asGet();\r\n  }\r\n\r\n  getPronunciationRequest(wordId) {\r\n    return this.client\r\n      .createRequest(`/words/${wordId}/pronunciation`)\r\n      .asGet();\r\n  }\r\n}\r\n",""],"sourceRoot":"../src"}