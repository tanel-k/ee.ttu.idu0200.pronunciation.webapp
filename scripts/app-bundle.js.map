{"version":3,"sources":["app.js","environment.js","main.js","lib/custom-audio-recorder.js","lib/word-utils.js","resources/index.js","containers/main-page/main-page.js","gateways/data/data-api.js","resources/elements/audio-recorder.js","containers/main-page/main-page.scss"],"names":["App","configureRouter","cfg","router","title","map","route","name","moduleId","debug","testing","gatewayRootURL","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","AudioRecorder","recordingStopSuccessCallback","recordingStopErrorCallback","permission","outputType","shouldLoop","playing","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","requestPermission","constraints","audio","chunks","onSuccess","stream","mediaRecorder","MediaRecorder","mediaStream","onstop","e","clipContainer","document","createElement","classList","add","setAttribute","appendChild","controls","blob","Blob","audioURL","window","URL","createObjectURL","src","ondataavailable","push","data","onError","err","startRecording","stopRecording","stop","play","pause","currentTime","loop","bool","stepBackward","stepForward","duration","clear","setOutputFileType","fileType","hasPermission","undefined","isLooping","isPlaying","isFinished","getRecording","getRecordingFile","getStream","getOutputType","ended","normalizeWord","word","trim","toLowerCase","globalResources","MainPage","api","normalizedQuery","activate","initDataModel","attached","audioPlayer","Audio","recordingForWordId","pronunciationLoadMap","pronunciationCache","queryStoredInBackend","isLoadingWords","wordsLoadedPct","isLoadingAudio","audioLoadedPct","queryChanged","query","queryResult","loaded","doneLoading","words","setTimeout","find","getWordsRequest","withDownloadProgressCallback","total","parseInt","send","response","content","catch","playPronunciation","wordId","lastModified","prevPronunciation","hasNotChanged","getWordRequest","playAudioBlob","audioBlob","loadMap","isAudioLoading","getPronunciationRequest","withResponseType","handleRecordPronunciationClick","DataAPI","client","withBaseUrl","prefix","createRequest","asGet","onRecorderSuccess","bind","isAttached","isRecording","isProcessingRecording","resetDataModel","recorder","playRecording","detached"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\r\n  constructor() {}\r\n\r\n  configureRouter(cfg, router) {\r\n    this.router = router;\r\n    cfg.title = 'Word.ly';\r\n\r\n    cfg.map([\r\n      {\r\n        route: '',\r\n        name: 'main',\r\n        moduleId: 'containers/main-page/main-page'\r\n      }\r\n    ]);\r\n  }\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true,\r\n  gatewayRootURL: 'http://localhost:8080'\r\n};\r\n","import environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\nPromise.config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","/* ADAPTED FROM https://github.com/Authman2/AUAudioRecorder */\r\n\r\nexport default class AudioRecorder {\r\n  permission = false;\r\n  mediaRecorder;\r\n  outputType = 'audio/mp3; codecs=opus'; // Default is mp3\r\n  audio; // This 'audio' serves as the final recording by the user.\r\n  blob; // The blob that can be used for file operations.\r\n  mediaStream;\r\n  shouldLoop = false;\r\n  playing = false;\r\n\r\n  recordingStopSuccessCallback;\r\n  recordingStopErrorCallback;\r\n\r\n  constructor(recordingStopSuccessCallback, recordingStopErrorCallback) {\r\n    navigator.getUserMedia = (navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);\r\n    this.recordingStopSuccessCallback = recordingStopSuccessCallback;\r\n    this.recordingStopErrorCallback = recordingStopErrorCallback;\r\n  }\r\n  /* Asks the user for their this.permission to access the computer's microphone. */\r\n\r\n  requestPermission() {\r\n    if (navigator.getUserMedia) {\r\n      // Definitions\r\n      const constraints = { audio: true };\r\n      let chunks = [];\r\n\r\n      const onSuccess = (stream) => {\r\n        // Initialize the media recorder\r\n        this.mediaRecorder = new MediaRecorder(stream);\r\n        this.mediaStream = stream;\r\n\r\n        this.mediaRecorder.onstop = (e) => {\r\n          // Create some new elements in the html\r\n          const clipContainer = document.createElement('article');\r\n          clipContainer.classList.add('clip');\r\n          this.audio = document.createElement('audio');\r\n          this.audio.setAttribute('controls', '');\r\n          clipContainer.appendChild(this.audio);\r\n\r\n          // Set some properties\r\n          this.audio.controls = true;\r\n          const blob = new Blob(chunks, { 'type': this.outputType });\r\n          chunks = [];\r\n          const audioURL = window.URL.createObjectURL(blob);\r\n          this.audio.src = audioURL;\r\n          this.blob = blob;\r\n\r\n          if (typeof this.recordingStopSuccessCallback === 'function') {\r\n            this.recordingStopSuccessCallback(blob);\r\n          }\r\n        };// End of onstop action.\r\n\r\n        this.mediaRecorder.ondataavailable = (e) => {\r\n          chunks.push(e.data);\r\n        }; // End of ondataavailable action.\r\n      }; // End of onSuccess\r\n\r\n      const onError = (err) => {\r\n        if (typeof this.recordingStopErrorCallback === 'function') {\r\n          this.recordingStopErrorCallback(err);\r\n        }\r\n      };// End of onError\r\n\r\n      this.permission = true;\r\n      navigator.getUserMedia(constraints, onSuccess, onError);\r\n    } // End of if-supported-statement.\r\n  }\r\n\r\n  /* Starts the recording. */\r\n  startRecording() {\r\n    if (this.mediaRecorder !== null) {\r\n      this.mediaRecorder.start();\r\n    }\r\n  }\r\n\r\n  /* Stops the recording. */\r\n  stopRecording() {\r\n    if (this.mediaRecorder !== null) {\r\n      this.mediaRecorder.stop();\r\n    }\r\n  }\r\n\r\n  /* Plays the recording. */\r\n  play() {\r\n    if (this.audio !== null) {\r\n      this.audio.play();\r\n      this.playing = true;\r\n    }\r\n  }\r\n  /* Pauses the recording. */\r\n  pause() {\r\n    if (this.audio !== null) {\r\n      this.audio.pause();\r\n      this.playing = false;\r\n    }\r\n  }\r\n\r\n  /* Stops the recording from this.playing. Calling 'play' will start it from the beginning. */\r\n  stop() {\r\n    if (this.audio !== null) {\r\n      this.audio.pause();\r\n      this.audio.currentTime = 0;\r\n      this.playing = false;\r\n    }\r\n  }\r\n\r\n  /* Loops the recorded this.audio. */\r\n  loop(bool) {\r\n    if (this.audio !== null) {\r\n      (bool === true) ? this.audio.loop = true : this.audio.loop = false;\r\n    }\r\n  }\r\n\r\n  /* Goes to the beginning of the this.audio. */\r\n  stepBackward() {\r\n    if (this.audio !== null) {\r\n      this.audio.currentTime = 0;\r\n    }\r\n  }\r\n\r\n  /* Goes to the end of the this.audio. */\r\n  stepForward() {\r\n    if (this.audio !== null) {\r\n      this.audio.currentTime = this.audio.duration;\r\n    }\r\n  }\r\n\r\n  /* Clears the current recording. */\r\n  clear() {\r\n    this.audio = null;\r\n    this.playing = false;\r\n  }\r\n\r\n  /* Sets the file type for the this.audio recording.\r\n  Ex.) mp3, wav, ogg, etc.... */\r\n  setOutputFileType(fileType) {\r\n    this.outputType = 'audio/' + fileType + '; codecs=opus';\r\n  }\r\n\r\n  /* Returns whether or not the program has the user's this.permission to use the microphone. */\r\n  hasPermission() {\r\n    if (this.permission === undefined) return false;\r\n    return (this.permission === true) ? true : false;\r\n  }\r\n\r\n  /* Returns whether or not the this.audio will loop. */\r\n  isLooping() {\r\n    if (this.audio !== null && (typeof (this.audio) !== null) && this.audio !== undefined) {\r\n      if (this.audio.loop === true) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /* Returns whether or not the this.audio is currently this.playing. */\r\n  isPlaying() {\r\n    if (this.audio !== null && (typeof (this.audio) !== null) && this.audio !== undefined) {\r\n      if ((this.audio.currentTime === this.audio.duration && this.audio.loop === false) || (this.audio.currentTime === 0) || (this.isFinished())) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /* Returns the this.audio object that contains the final recording. */\r\n  getRecording() {\r\n    if (this.audio !== null && (typeof (this.audio) !== null) && this.audio !== undefined) { return this.audio; }\r\n    return null;\r\n  }\r\n\r\n  /* Returns a Blob object, which can be used for file operations. */\r\n  getRecordingFile() {\r\n    return this.blob;\r\n  }\r\n\r\n  /* This returns the media stream from the web audio API. */\r\n  getStream() {\r\n    if (this.mediaStream !== null && (typeof (this.mediaStream) !== null) && this.mediaStream !== undefined) { return this.mediaStream; }\r\n    return null;\r\n  }\r\n\r\n  /* Returns the output file type. */\r\n  getOutputType() {\r\n    if (this.outputType !== null && (typeof (this.outputType) !== null) && this.outputType !== undefined) { return this.outputType; }\r\n    return null;\r\n  }\r\n\r\n  /* Returns whether or not the audio is finished playing. */\r\n  isFinished() {\r\n    if (this.audio !== null && (typeof (this.audio) !== null) && this.audio !== undefined) { return this.audio.ended; }\r\n    return null;\r\n  }\r\n}\r\n\r\n","export const normalizeWord = (word) => (\r\n  word ? word.trim().toLowerCase() : word\r\n);\r\n","export function configure(config) {\r\n  config.globalResources([\r\n    './elements/audio-recorder'\r\n  ]);\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { bindable } from 'aurelia-framework';\r\n\r\nimport { normalizeWord } from '../../lib/word-utils';\r\nimport { DataAPI } from '../../gateways/data/data-api';\r\n\r\n@inject(DataAPI)\r\nexport class MainPage {\r\n  @bindable query = '';\r\n  normalizedQuery = '';\r\n\r\n  constructor(api) {\r\n    this.api = api;\r\n  }\r\n\r\n  activate() {\r\n    this.initDataModel();\r\n  }\r\n\r\n  attached() {\r\n    this.audioPlayer = new window.Audio();\r\n  }\r\n\r\n  initDataModel() {\r\n    this.recordingForWordId = null;\r\n    this.pronunciationLoadMap = {};\r\n    this.pronunciationCache = {};\r\n    this.queryStoredInBackend = true;\r\n    this.isLoadingWords = false;\r\n    this.wordsLoadedPct = 0;\r\n    this.isLoadingAudio = false;\r\n    this.audioLoadedPct = 0;\r\n  }\r\n\r\n  queryChanged() {\r\n    const normalizedQuery = this.normalizedQuery = normalizeWord(this.query);\r\n    this.queryResult = [];\r\n    this.queryStoredInBackend = true;\r\n    if (normalizedQuery) {\r\n      this.isLoadingWords = true;\r\n      this.loaded = 0;\r\n\r\n      const doneLoading = (words) => {\r\n        this.wordsLoadedPct = 100;\r\n        setTimeout(() => {\r\n          this.isLoadingWords = false;\r\n          this.queryStoredInBackend = typeof words.find(word => word.word === normalizedQuery) !== 'undefined';\r\n          this.queryResult = words;\r\n        }, 150);\r\n      };\r\n\r\n      this.api.getWordsRequest(normalizedQuery)\r\n        .withDownloadProgressCallback(({ loaded, total }) => this.wordsLoadedPct = parseInt(loaded * 100.0 / total, 10))\r\n        .send()\r\n        .then((response) => {\r\n          const words = response.content;\r\n          doneLoading(words);\r\n        })\r\n        .catch((err) => {\r\n          doneLoading();\r\n        });\r\n    }\r\n  }\r\n\r\n  playPronunciation(wordId) {\r\n    // check cache\r\n    let lastModified;\r\n    if (this.pronunciationCache[wordId]) {\r\n      const prevPronunciation = this.pronunciationCache[wordId];\r\n      let hasNotChanged = true;\r\n      this.api.getWordRequest(wordId)\r\n        .send()\r\n        .then((response) => {\r\n          const word = response.content;\r\n          lastModified = word.lastModified;\r\n          hasNotChanged = prevPronunciation.lastModified === lastModified;\r\n        });\r\n\r\n      if (hasNotChanged) {\r\n        this.playAudioBlob(prevPronunciation.audioBlob);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // download audio\r\n    const loadMap = this.pronunciationLoadMap[wordId] = {\r\n      isAudioLoading: true,\r\n      audioLoadedPct: 0\r\n    };\r\n    const doneLoading = (audioBlob) => {\r\n      loadMap.audioLoadedPct = 100;\r\n      setTimeout(() => {\r\n        loadMap.isAudioLoading = false;\r\n        if (audioBlob) {\r\n          this.playAudioBlob(audioBlob);\r\n        }\r\n      }, 150);\r\n    };\r\n\r\n    this.api.getPronunciationRequest(wordId)\r\n      .withResponseType('blob')\r\n      .withDownloadProgressCallback(({ loaded, total }) => loadMap.audioLoadedPct = parseInt(loaded * 100.0 / total, 10))\r\n      .send()\r\n      .then((response) => {\r\n        const audioBlob = response.content;\r\n        this.pronunciationCache[wordId] = { audioBlob, lastModified };\r\n        doneLoading(audioBlob);\r\n      })\r\n      .catch((err) => {\r\n        doneLoading();\r\n      });\r\n  }\r\n\r\n  handleRecordPronunciationClick(wordId) {\r\n    this.recordingForWordId = wordId;\r\n  }\r\n\r\n  playAudioBlob(audioBlob) {\r\n    this.audioPlayer.src = window.URL.createObjectURL(audioBlob);\r\n    this.audioPlayer.play();\r\n  }\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { HttpClient } from 'aurelia-http-client';\r\nimport environment from '../../environment';\r\n\r\n@inject(HttpClient)\r\nexport class DataAPI {\r\n  constructor(client) {\r\n    this.client = client.configure(cfg => cfg\r\n      .withBaseUrl(environment.gatewayRootURL)\r\n    );\r\n  }\r\n\r\n  getWordsRequest(prefix) {\r\n    return this.client\r\n      .createRequest(`/words?query=${prefix}`)\r\n      .asGet();\r\n  }\r\n\r\n  getPronunciationRequest(wordId) {\r\n    return this.client\r\n      .createRequest(`/words/${wordId}/pronunciation`)\r\n      .asGet();\r\n  }\r\n\r\n  getWordRequest(wordId) {\r\n    return this.client\r\n      .createRequest(`/words/${wordId}`)\r\n      .asGet();\r\n  }\r\n}\r\n","import CustomAudioRecorder from '../../lib/custom-audio-recorder';\r\n\r\nexport class AudioRecorder {\r\n  constructor() {\r\n    this.initDataModel();\r\n    this.onRecorderSuccess = this.onRecorderSuccess.bind(this);\r\n  }\r\n\r\n  initDataModel() {\r\n    this.isAttached = false;\r\n    this.isRecording = false;\r\n    this.isProcessingRecording = false;\r\n    this.audioBlob = null;\r\n  }\r\n\r\n  resetDataModel() {\r\n    this.initDataModel();\r\n  }\r\n\r\n  attached() {\r\n    const recorder = this.recorder = new CustomAudioRecorder(this.onRecorderSuccess);\r\n    this.isAttached = true;\r\n    if (!recorder.hasPermission()) {\r\n      recorder.requestPermission();\r\n    }\r\n  }\r\n\r\n  onRecorderSuccess(audioBlob) {\r\n    this.audioBlob = audioBlob;\r\n    this.isProcessingRecording = false;\r\n  }\r\n\r\n  get hasPermission() {\r\n    return this.recorder && this.recorder.hasPermission();\r\n  }\r\n\r\n  get hasAudioData() {\r\n    return this.audioBlob;\r\n  }\r\n\r\n  get isPlaying() {\r\n    return this.recorder.isPlaying();\r\n  }\r\n\r\n  startRecording() {\r\n    this.audioBlob = null;\r\n    this.isRecording = true;\r\n    this.recorder.startRecording();\r\n  }\r\n\r\n  stopRecording() {\r\n    this.isRecording = false;\r\n    this.isProcessingRecording = true;\r\n    this.recorder.stopRecording();\r\n  }\r\n\r\n  playRecording() {\r\n    this.recorder.play();\r\n  }\r\n\r\n  detached() {\r\n    this.resetDataModel();\r\n  }\r\n}\r\n",".progress {\r\n  margin-bottom: 0 !important;\r\n}\r\n\r\n.word-controls-group.not-loading {\r\n  margin-bottom: 6px;\r\n}\r\n"],"sourceRoot":"../src"}