{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","containers/main-page/main-page.js","gateways/data/data-api.js","lib/word-utils.js","containers/main-page/main-page.scss"],"names":["App","configureRouter","cfg","router","title","map","route","name","moduleId","debug","testing","gatewayRootURL","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","MainPage","api","normalizedQuery","activate","initDataModel","attached","audioPlayer","window","Audio","pronunciationLoadMap","pronunciationCache","queryStoredInBackend","isLoadingWords","wordsLoadedPct","isLoadingAudio","audioLoadedPct","queryChanged","query","queryResult","loaded","doneLoading","words","setTimeout","find","word","getWordsRequest","withDownloadProgressCallback","total","parseInt","send","response","content","catch","err","playPronunciation","wordId","lastModified","prevPronunciation","hasNotChanged","getWordRequest","playAudioBlob","audioBlob","loadMap","isAudioLoading","getPronunciationRequest","withResponseType","src","URL","createObjectURL","play","DataAPI","client","withBaseUrl","prefix","createRequest","asGet","normalizeWord","trim","toLowerCase"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\r\n  constructor() {}\r\n\r\n  configureRouter(cfg, router) {\r\n    this.router = router;\r\n    cfg.title = 'Word.ly';\r\n\r\n    cfg.map([\r\n      {\r\n        route: '',\r\n        name: 'main',\r\n        moduleId: 'containers/main-page/main-page'\r\n      }\r\n    ]);\r\n  }\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true,\r\n  gatewayRootURL: 'http://localhost:8080'\r\n};\r\n","import environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\nPromise.config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { bindable } from 'aurelia-framework';\r\n\r\nimport { normalizeWord } from '../../lib/word-utils';\r\nimport { DataAPI } from '../../gateways/data/data-api';\r\n\r\n@inject(DataAPI)\r\nexport class MainPage {\r\n  @bindable query = '';\r\n  normalizedQuery = '';\r\n\r\n  constructor(api) {\r\n    this.api = api;\r\n  }\r\n\r\n  activate() {\r\n    this.initDataModel();\r\n  }\r\n\r\n  attached() {\r\n    this.audioPlayer = new window.Audio();\r\n  }\r\n\r\n  initDataModel() {\r\n    this.pronunciationLoadMap = {};\r\n    this.pronunciationCache = {};\r\n    this.queryStoredInBackend = true;\r\n    this.isLoadingWords = false;\r\n    this.wordsLoadedPct = 0;\r\n    this.isLoadingAudio = false;\r\n    this.audioLoadedPct = 0;\r\n  }\r\n\r\n  queryChanged() {\r\n    const normalizedQuery = this.normalizedQuery = normalizeWord(this.query);\r\n    this.queryResult = [];\r\n    this.queryStoredInBackend = true;\r\n    if (normalizedQuery) {\r\n      this.isLoadingWords = true;\r\n      this.loaded = 0;\r\n\r\n      const doneLoading = (words) => {\r\n        this.wordsLoadedPct = 100;\r\n        setTimeout(() => {\r\n          this.isLoadingWords = false;\r\n          this.queryStoredInBackend = typeof words.find(word => word.word === normalizedQuery) !== 'undefined';\r\n          this.queryResult = words;\r\n        }, 150);\r\n      };\r\n\r\n      this.api.getWordsRequest(normalizedQuery)\r\n        .withDownloadProgressCallback(({ loaded, total }) => this.wordsLoadedPct = parseInt(loaded * 100.0 / total, 10))\r\n        .send()\r\n        .then((response) => {\r\n          const words = response.content;\r\n          doneLoading(words);\r\n        })\r\n        .catch((err) => {\r\n          doneLoading();\r\n        });\r\n    }\r\n  }\r\n\r\n  playPronunciation(wordId) {\r\n    // check cache\r\n    let lastModified;\r\n    if (this.pronunciationCache[wordId]) {\r\n      const prevPronunciation = this.pronunciationCache[wordId];\r\n      let hasNotChanged = true;\r\n      this.api.getWordRequest(wordId)\r\n        .send()\r\n        .then((response) => {\r\n          const word = response.content;\r\n          lastModified = word.lastModified;\r\n          hasNotChanged = prevPronunciation.lastModified === lastModified;\r\n        });\r\n\r\n      if (hasNotChanged) {\r\n        this.playAudioBlob(prevPronunciation.audioBlob);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // download audio\r\n    const loadMap = this.pronunciationLoadMap[wordId] = {\r\n      isAudioLoading: true,\r\n      audioLoadedPct: 0\r\n    };\r\n    const doneLoading = (audioBlob) => {\r\n      loadMap.audioLoadedPct = 100;\r\n      setTimeout(() => {\r\n        loadMap.isAudioLoading = false;\r\n        if (audioBlob) {\r\n          this.playAudioBlob(audioBlob);\r\n        }\r\n      }, 150);\r\n    };\r\n\r\n    this.api.getPronunciationRequest(wordId)\r\n      .withResponseType('blob')\r\n      .withDownloadProgressCallback(({ loaded, total }) => loadMap.audioLoadedPct = parseInt(loaded * 100.0 / total, 10))\r\n      .send()\r\n      .then((response) => {\r\n        const audioBlob = response.content;\r\n        this.pronunciationCache[wordId] = { audioBlob, lastModified };\r\n        doneLoading(audioBlob);\r\n      })\r\n      .catch((err) => {\r\n        doneLoading();\r\n      });\r\n  }\r\n\r\n  playAudioBlob(audioBlob) {\r\n    this.audioPlayer.src = window.URL.createObjectURL(audioBlob);\r\n    this.audioPlayer.play();\r\n  }\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { HttpClient } from 'aurelia-http-client';\r\nimport environment from '../../environment';\r\n\r\n@inject(HttpClient)\r\nexport class DataAPI {\r\n  constructor(client) {\r\n    this.client = client.configure(cfg => cfg\r\n      .withBaseUrl(environment.gatewayRootURL)\r\n    );\r\n  }\r\n\r\n  getWordsRequest(prefix) {\r\n    return this.client\r\n      .createRequest(`/words?query=${prefix}`)\r\n      .asGet();\r\n  }\r\n\r\n  getPronunciationRequest(wordId) {\r\n    return this.client\r\n      .createRequest(`/words/${wordId}/pronunciation`)\r\n      .asGet();\r\n  }\r\n\r\n  getWordRequest(wordId) {\r\n    return this.client\r\n      .createRequest(`/words/${wordId}`)\r\n      .asGet();\r\n  }\r\n}\r\n","export const normalizeWord = (word) => (\r\n  word ? word.trim().toLowerCase() : word\r\n);\r\n",".progress {\r\n  margin-bottom: 0 !important;\r\n}\r\n\r\n.word-controls-group.not-loading {\r\n  margin-bottom: 6px;\r\n}\r\n"],"sourceRoot":"../src"}